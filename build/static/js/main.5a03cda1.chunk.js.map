{"version":3,"sources":["component/ContactForm/ContactForm.jsx","component/ContactListItem/ContactListItem.jsx","component/ContactList/ContactList.jsx","component/Filter/Filter.jsx","component/App/App.js","index.js"],"names":["ContactForm","state","name","number","onHandleChange","event","target","value","setState","onHandleSubmit","preventDefault","props","onHandlerSubmit","id","uuidv4","this","onSubmit","type","onChange","Component","ContactListItem","contact","deleteContactById","data-id","onClick","ContactList","contacts","filter","toLowerCase","includes","map","Filter","onChangeFilter","App","some","item","alert","length","prev","e","dataset","localStorage","getItem","contactsFromLS","JSON","parse","_","prevState","setItem","stringify","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5a03cda1.chunk.js","sourcesContent":[" import React, { Component } from \"react\";\r\n import { v4 as uuidv4 } from 'uuid';\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  onHandleChange = (event) => {\r\n    const { name, value } = event.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  onHandleSubmit = (event) => {\r\n    event.preventDefault();\r\n    this.props.onHandlerSubmit({ ...this.state, id: uuidv4() });\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n\r\n    return (\r\n      <>\r\n        <form  onSubmit={this.onHandleSubmit}>\r\n          <label>\r\n            Name\r\n            <input\r\n              type=\"text\"\r\n              value={name}\r\n              name=\"name\"\r\n              onChange={this.onHandleChange}\r\n            />\r\n          </label>\r\n          <label>\r\n            Number\r\n            <input\r\n              type=\"text\"\r\n              value={number}\r\n              name=\"number\"\r\n              onChange={this.onHandleChange}\r\n            />\r\n          </label>\r\n          <button type=\"submit\">\r\n            Add contact\r\n          </button>\r\n        </form>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactForm;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst ContactListItem = ({ contact, deleteContactById }) => {\r\n  return (\r\n    <>\r\n      <li key={contact.id}>\r\n        <span>{contact.name}:</span>\r\n        <span>{contact.number}</span>\r\n        <button\r\n          type=\"button\"\r\n          data-id={contact.id}\r\n          onClick={deleteContactById}\r\n        >\r\n          Delete\r\n        </button>\r\n      </li>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ContactListItem;\r\n\r\nContactListItem.propTypes = {\r\n  contacts: PropTypes.object,\r\n  deleteContactById: PropTypes.func,\r\n};","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport ContactListItem from \"../ContactListItem/ContactListItem\";\r\n\r\n\r\nconst ContactList = ({ contacts, filter, deleteContactById }) => {\r\n  return (\r\n    <>\r\n      <ul>\r\n        {contacts\r\n          .filter((contact) =>\r\n            contact.name.toLowerCase().includes(filter.toLowerCase())\r\n          )\r\n          .map((contact) => (\r\n            <ContactListItem\r\n              key={contact.id}\r\n              contact={contact}\r\n              deleteContactById={deleteContactById}\r\n            />\r\n          ))}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ContactList;\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(PropTypes.object),\r\n  filter: PropTypes.string,\r\n  deleteContactById: PropTypes.func,\r\n};\r\n\r\n\r\n","import React from \"react\";\r\n\r\n\r\nconst Filter = ({ value, onChangeFilter }) => {\r\n  return (\r\n      <>\r\n        <label>\r\n          Find contact by name\r\n          <input\r\n            type=\"text\"\r\n            name=\"filter\"\r\n            value={value}\r\n            onChange={onChangeFilter}\r\n          />\r\n        </label>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n\r\n"," import React, { Component } from 'react';\r\n import ContactForm from \"../ContactForm/ContactForm\";\r\nimport ContactList from \"../ContactList/ContactList\";\r\nimport Filter from \"../Filter/Filter\";\r\n\r\n\r\nclass App extends Component{\r\nstate = {\r\n  contacts: [{id: 'id-1', name: 'Rosie Simpson', number: '459-12-56'},\r\n    {id: 'id-2', name: 'Hermione Kline', number: '443-89-12'},\r\n    {id: 'id-3', name: 'Eden Clements', number: '645-17-79'},\r\n    {id: 'id-4', name: 'Annie Copeland', number: '227-91-26'},],\r\n  filter: \"\",\r\n  }\r\n\r\n componentDidMount() {\r\n    if (localStorage.getItem(\"contacts\")) {\r\n      const contactsFromLS = JSON.parse(localStorage.getItem(\"contacts\"));\r\n      this.setState({\r\n        contacts: [...contactsFromLS],\r\n      });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(_, prevState) {\r\n    if (prevState.contacts !== this.state.contacts) {\r\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\r\n    }\r\n  }\r\n\r\nonHandlerSubmit = (contact) => {\r\n    if (this.state.contacts.some((item) => item.name === contact.name)) {\r\n      alert(`${contact.name} is already in contacts`);\r\n      return;\r\n    }\r\n\r\n    if (this.state.contacts.some((item) => item.number === contact.number)) {\r\n      alert(`Contact with number ${contact.number} is already in contacts`);\r\n      return;\r\n    }\r\n\r\n    if (!contact.name.length) {\r\n      alert(\"Please, enter a name\");\r\n      return;\r\n    }\r\n    if (!contact.number.length) {\r\n      alert(\"Please, enter a number\");\r\n      return;\r\n    }\r\n    this.setState((prev) => {\r\n      return {\r\n        contacts: [...prev.contacts, contact],\r\n      };\r\n    });\r\n  };\r\n\r\n  deleteContactById = (e) => {\r\n    const id = e.target.dataset.id;\r\n    this.setState({\r\n      contacts: this.state.contacts.filter((contact) => contact.id !== id),\r\n    });\r\n    this.setState({ filter: \"\" });\r\n  };\r\n\r\n  onChangeFilter = (e) => {\r\n    this.setState({ filter: e.target.value });\r\n  };\r\n\r\n  render() {\r\n    const { contacts, filter } = this.state;\r\n\r\n    return (\r\n      <>\r\n        <h2>PhoneBook</h2>\r\n        <ContactForm onHandlerSubmit={this.onHandlerSubmit} />\r\n\r\n        <h2>Contacts</h2>\r\n        <Filter value={filter} onChangeFilter={this.onChangeFilter} />\r\n        <ContactList\r\n          contacts={contacts}\r\n          filter={filter}\r\n          deleteContactById={this.deleteContactById}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App\r\n\r\n\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './component/App/App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}