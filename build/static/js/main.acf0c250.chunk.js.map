{"version":3,"sources":["component/ContactForm/ContactFormStyled.js","component/ContactForm/ContactForm.jsx","component/ContactListItem/ContactListItem.jsx","component/ContactList/ContactListStyled.js","component/ContactList/ContactList.jsx","component/Filter/FilterStyled.js","component/Filter/Filter.jsx","component/Notification/NotificationStyled.js","component/Notification/Notification.jsx","component/App/AppStyled.js","component/App/App.js","index.js"],"names":["Wrapper","styled","div","ContactForm","state","name","number","onHandleChange","event","target","value","setState","onHandleSubmit","preventDefault","props","onHandlerSubmit","id","uuidv4","this","className","onSubmit","type","onChange","Component","ContactListItem","contact","deleteContactById","data-id","onClick","ContactList","contacts","filter","ContactListStyled","TransitionGroup","component","toLowerCase","includes","map","CSSTransition","timeout","classNames","Filter","onChangeFilter","FilterStyled","MessageStyled","Notification","notification","NotificationStyled","Wraper","App","openNotification","showNotificationAlert","setTimeout","some","item","length","prev","dataset","localStorage","getItem","contactsFromLS","JSON","parse","_","prevState","setItem","stringify","AppStyled","in","unmountOnExit","appear","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.acf0c250.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nconst Wrapper = styled.div`\r\n\r\n.title-form\r\n{\r\ndisplay: flex;\r\n    flex-direction: column;\r\n    font-weight: 500;\r\n    font-size: 18px;\r\n    line-height: 1.63;\r\n    color: black;\r\n    margin-bottom: 20px;\r\n}\r\n.input-form{\r\n    font-weight: 400;\r\n    font-size: 16px;\r\n    line-height: 1.63;\r\n    color: black;\r\n    width: 400px;\r\n    border: 1px solid #696969;\r\n    border-radius: 4px;\r\n    padding: 10px 15px;\r\n    margin-top: 5px;\r\n}\r\n.button{\r\ndisplay: inline-block;\r\n    font-weight: 500;\r\n    font-size: 15px;\r\n    line-height: 1.63;\r\n    color: white;\r\n    width: 100px;\r\n    padding: 7px 10px;\r\n    background-color: blue;\r\n    cursor: pointer;\r\n    border: none;\r\n    border-radius: 4px;\r\n    outline: none;\r\n}\r\n.button:hover{\r\n    color: #fff;\r\n    background-color: black;\r\n    box-shadow: 7px 7px 12px 3px rgba(0, 0, 0, 0.42);\r\n    transition: 500ms cubic-bezier(0.4, 0, 0.2, 1);\r\n}\r\n`;\r\n\r\nexport default Wrapper;","import React, { Component } from \"react\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport ContFormStyled from \"../ContactForm/ContactFormStyled\";\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  onHandleChange = (event) => {\r\n    const { name, value } = event.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  onHandleSubmit = (event) => {\r\n    event.preventDefault();\r\n    this.props.onHandlerSubmit({ ...this.state, id: uuidv4() });\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n\r\n    return (\r\n      <ContFormStyled>\r\n        <form className=\"contForm\" onSubmit={this.onHandleSubmit}>\r\n          <label className=\"title-form\">\r\n            Name\r\n            <input\r\n              type=\"text\"\r\n              value={name}\r\n              name=\"name\"\r\n              onChange={this.onHandleChange}\r\n              className=\"input-form\"\r\n            />\r\n          </label>\r\n          <label className=\"title-form\">\r\n            Number\r\n            <input\r\n              type=\"text\"\r\n              value={number}\r\n              name=\"number\"\r\n              onChange={this.onHandleChange}\r\n              className=\"input-form\"\r\n            />\r\n          </label>\r\n          <button type=\"submit\" className=\"button\">\r\n            Add contact\r\n          </button>\r\n        </form>\r\n      </ContFormStyled>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactForm;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst ContactListItem = ({ contact, deleteContactById }) => {\r\n  return (\r\n    <>\r\n      <li className=\"contact-list__item\" key={contact.id}>\r\n        <div className=\"contact-list__item-info\">\r\n        <span className=\"contact-list__item-name\">{contact.name}:</span>\r\n        <span className=\"contact-list__item-number\">{contact.number}</span>\r\n        </div>\r\n        <button\r\n          type=\"button\"\r\n          data-id={contact.id}\r\n          onClick={deleteContactById}\r\n          className=\"contact-list__item-btn\"\r\n        >\r\n          Delete\r\n        </button>\r\n      </li>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ContactListItem;\r\n\r\nContactListItem.propTypes = {\r\n  contacts: PropTypes.object,\r\n  deleteContactById: PropTypes.func,\r\n};","import styled from \"styled-components\";\r\n\r\nconst Wrapper = styled.div`\r\n.contact{\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n}\r\n.contact-list__item {\r\n    display: flex;\r\n    border: 1px solid black;\r\n    border-radius: 4px;\r\n    margin-bottom: 5px;\r\n    padding: 10px 15px;\r\n    color: black;\r\n  }\r\n  .contact-list-item-enter {\r\n    opacity: 0;\r\n    transform: translateX(-100%);\r\n  }\r\n  .contact-list-item-enter-active {\r\n    opacity: 1;\r\n    transform: translateX(0);\r\n    transition: all 250ms;\r\n  }\r\n  .contact-list-item-exit {\r\n    opacity: 1;\r\n    transform: translateX(0);\r\n  }\r\n  .contact-list-item-exit-active {\r\n    opacity: 0;\r\n    transform: translateX(-100%);\r\n    transition: all 250ms;\r\n  }\r\n  .contact-list__item-ifo {\r\n    width: 320px;\r\n  }\r\n  .contact-list__item-name {\r\n    margin-right: 15px;\r\n  }\r\n  .contact-list__item-number {\r\n    margin-right: 15px;\r\n  }\r\n  .contact-list__item-btn {\r\n    display: inline-block;\r\n    font-weight: 500;\r\n    font-size: 15px;\r\n    line-height: 1.63;\r\n    color: white;\r\n    width: 70px;\r\n    padding: 2px 10px;\r\n    background-color: red;\r\n    cursor: pointer;\r\n    border: none;\r\n    border-radius: 4px;\r\n    outline: none;\r\n    margin-left: 10px;\r\n  }\r\n  .contact-list__item-btn:hover {\r\n    color: #fff;\r\n    background-color: red;\r\n    box-shadow: 7px 7px 12px 3px rgba(0, 0, 0, 0.42);\r\n    transition: 500ms cubic-bezier(0.4, 0, 0.2, 1);\r\n  }\r\n`;\r\n\r\nexport default Wrapper;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport ContactListItem from \"../ContactListItem/ContactListItem\";\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group'\r\nimport ContactListStyled from \"../ContactList/ContactListStyled\";\r\n\r\nconst ContactList = ({ contacts, filter, deleteContactById }) => {\r\n  return (\r\n    <ContactListStyled>\r\n      <TransitionGroup component=\"ul\" className=\"contact\">\r\n        {contacts\r\n          .filter((contact) =>\r\n            contact.name.toLowerCase().includes(filter.toLowerCase())\r\n          )\r\n          .map((contact) => (\r\n            <CSSTransition\r\n            key={contact.id}\r\n            timeout={250}\r\n            classNames=\"contact-list-item\"\r\n            >\r\n              \r\n            \r\n            <ContactListItem\r\n            \r\n              contact={contact}\r\n              deleteContactById={deleteContactById}\r\n              />\r\n              </CSSTransition>\r\n          ))}\r\n      </TransitionGroup>\r\n    </ContactListStyled>\r\n  );\r\n};\r\n\r\nexport default ContactList;\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(PropTypes.object),\r\n  filter: PropTypes.string,\r\n  deleteContactById: PropTypes.func,\r\n};\r\n\r\n\r\n","import styled from 'styled-components';\r\nconst Wrapper = styled.div`\r\nposition: relative;\r\n.filter-title{\r\n    display: flex;\r\n    flex-direction: column;\r\n    font-weight: 500;\r\n    font-size: 18px;\r\n    line-height: 1.63;\r\n    color: black;\r\n\r\n}\r\n.filter-input{\r\n    font-weight: 400;\r\n    font-size: 16px;\r\n    line-height: 1.63;\r\n    color: black;\r\n    width: 400px;\r\n    border: 1px solid #696969;\r\n    border-radius: 4px;\r\n    padding: 5px 15px;\r\n    margin-top: 5px;\r\n}\r\n`;\r\n\r\nexport default Wrapper","import React from \"react\";\r\nimport FilterStyled from '../Filter/FilterStyled';\r\n\r\n\r\nconst Filter = ({ value, onChangeFilter }) => {\r\n  return (\r\n      <FilterStyled>\r\n        <label className=\"filter-title\">\r\n          Find contact by name\r\n          <input\r\n            type=\"text\"\r\n            name=\"filter\"\r\n            value={value}\r\n          onChange={onChangeFilter}\r\n          className=\"filter-input\"\r\n          />\r\n        </label>\r\n    </FilterStyled>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n\r\n","import styled from \"styled-components\";\r\nconst MessageStyled = styled.div`\r\n  position: absolute;\r\n  top: 45px;\r\n  right: 45px;\r\n  max-width: 300px;\r\n  background-color: red;\r\n  border-radius: 4px;\r\n  padding: 10px 15px;\r\n  .notification-title {\r\n    text-align: center;\r\n    font-weight: 400;\r\n    font-size: 18px;\r\n    line-height: 1.63;\r\n    color: #ffffff;\r\n  }\r\n`;\r\nexport default MessageStyled;","import React from \"react\";\r\nimport NotificationStyled from \"../Notification/NotificationStyled\";\r\n\r\nconst Notification = ({ notification }) => {\r\n  return (\r\n    <NotificationStyled>\r\n      <p className=\"notification-title\">{notification}</p>\r\n    </NotificationStyled>\r\n  );\r\n};\r\n\r\nexport default Notification;","import styled from 'styled-components';\r\n\r\nconst Wraper = styled.div`\r\ndisplay: flex;\r\n  flex-direction: column;\r\n  position: relative;\r\n  overflow: hidden;\r\n  padding: 50px;\r\n  width: 432px;\r\n  background-color: white;\r\n  border-radius: 4px;\r\n  margin: 0 auto;\r\n  box-shadow: 7px 5px 7px 5px rgba(140, 140, 140, 0.75);\r\n\r\n.phonebook-appear{\r\n    opacity: 0;\r\n    transform: translateX(-100%);\r\n}\r\n.phonebook-appear-active{\r\n    opacity: 1;\r\n    transform: translateX(0);\r\n    transition: all 500ms linear;\r\n}\r\n.phbook-title{\r\n    font-weight: 700;\r\n    font-size: 25px;\r\n    line-height: 1.63;\r\n    color: blue;\r\n    overflow: hidden;\r\n    margin-bottom: 20px;\r\n}\r\n.contacts-title{\r\n    text-align: center;\r\n    font-weight: 700;\r\n    font-size: 25px;\r\n    line-height: 1.63;\r\n    color: blue;\r\n    margin-bottom: 20px;\r\n}\r\n .notification-enter {\r\n    opacity: 0;\r\n    transform: translateX(100%);\r\n  }\r\n  .notification-enter-active {\r\n    opacity: 1;\r\n    transform: translateX(0);\r\n    transition: all 250ms;\r\n  }\r\n  .notification-exit {\r\n    opacity: 1;\r\n    transform: translateX(0);\r\n  }\r\n  .notification-exit-active {\r\n    opacity: 0;\r\n    transform: translateX(100%);\r\n    transition: all 250ms;\r\n  }\r\n  .filter-enter {\r\n    opacity: 0;\r\n    transform: translateX(-100%) translateY(-100%);\r\n  }\r\n  .filter-enter-active {\r\n    opacity: 1;\r\n    transform: translateX(0) translateY(0);\r\n    transition: all 250ms linear;\r\n  }\r\n  .my-filter-exit {\r\n    opacity: 1;\r\n  }\r\n  .filter-exit-active {\r\n    opacity: 0;\r\n    transform: translateX(100%) translateY(-100%);\r\n    transition: all 250ms linear;\r\n  }\r\n\r\n\r\n  `;\r\nexport default Wraper;","import React, { Component } from 'react';\r\nimport ContactForm from \"../ContactForm/ContactForm\";\r\nimport ContactList from \"../ContactList/ContactList\";\r\nimport Filter from \"../Filter/Filter\";\r\nimport {CSSTransition} from 'react-transition-group'\r\nimport Notification from '../Notification/Notification'\r\nimport AppStyled from '../App/AppStyled';\r\n\r\nclass App extends Component{\r\nstate = {\r\n  contacts: [{id: 'id-1', name: 'Rosie Simpson', number: '459-12-56'},\r\n    {id: 'id-2', name: 'Hermione Kline', number: '443-89-12'},\r\n    {id: 'id-3', name: 'Eden Clements', number: '645-17-79'},\r\n    {id: 'id-4', name: 'Annie Copeland', number: '227-91-26'},],\r\n  filter: \"\",\r\n  notification: \"\",\r\n  openNotification: false,\r\n  }\r\n\r\n componentDidMount() {\r\n    if (localStorage.getItem(\"contacts\")) {\r\n      const contactsFromLS = JSON.parse(localStorage.getItem(\"contacts\"));\r\n      this.setState({\r\n        contacts: [...contactsFromLS],\r\n      });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(_, prevState) {\r\n    if (prevState.contacts !== this.state.contacts) {\r\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\r\n    }\r\n  }\r\n\r\n  showNotificationAlert = (notification) => {\r\n    this.setState({ notification: notification });\r\n    this.setState({ openNotification: true });\r\n    setTimeout(() => {\r\n      this.setState({ openNotification: false });\r\n    }, 2000)\r\n    setTimeout(() => {\r\n      this.setState({notification: \"\"})\r\n    }, 2500)\r\n  }\r\n\r\nonHandlerSubmit = (contact) => {\r\n    if (this.state.contacts.some((item) => item.name === contact.name)) {\r\n     this.showNotificationAlert(`${contact.name} is already in contacts`);\r\n      return;\r\n    }\r\n\r\n    if (this.state.contacts.some((item) => item.number === contact.number)) {\r\n     this.showNotificationAlert(`Contact with number ${contact.number} is already in contacts`);\r\n      return;\r\n    }\r\n\r\n    if (!contact.name.length) {\r\n      this.showNotificationAlert(\"Please, enter a name\");\r\n      return;\r\n    }\r\n    if (!contact.number.length) {\r\n     this.showNotificationAlert(\"Please, enter a number\");\r\n      return;\r\n    }\r\n    this.setState((prev) => {\r\n      return {\r\n        contacts: [...prev.contacts, contact],\r\n      };\r\n    });\r\n  };\r\n\r\n  deleteContactById = (event) => {\r\n    const id = event.target.dataset.id;\r\n    this.setState({\r\n      contacts: this.state.contacts.filter((contact) => contact.id !== id),\r\n    });\r\n    this.setState({ filter: \"\" });\r\n  };\r\n\r\n  onChangeFilter = (event) => {\r\n    this.setState({ filter: event.target.value });\r\n  };\r\n\r\n  render() {\r\n    const { contacts, filter, notification, openNotification } = this.state;\r\n\r\n    return (\r\n      <AppStyled>\r\n        <CSSTransition\r\n        in={openNotification}\r\n          timeout={250}\r\n          classNames=\"notification\"\r\n          unmountOnExit>\r\n          <Notification notification={notification}/>\r\n        </CSSTransition>\r\n        <CSSTransition\r\n          in={true}\r\n          timeout={500}\r\n          appear={true}\r\n        classNames=\"phonebook\">\r\n        <h2 className=\"phbook-title\">PhoneBook</h2>\r\n        </CSSTransition>\r\n        <ContactForm onHandlerSubmit={this.onHandlerSubmit} />\r\n\r\n        <h2 className=\"contacts-title\">Contacts</h2>\r\n        <CSSTransition\r\n        in={contacts.length > 1}\r\n          timeout={250}\r\n          appear={true}\r\n          classNames=\"filter\"\r\n          unmountOnExit>\r\n        <Filter value={filter} onChangeFilter={this.onChangeFilter} />\r\n        </CSSTransition>\r\n        <ContactList\r\n          contacts={contacts}\r\n          filter={filter}\r\n          deleteContactById={this.deleteContactById}\r\n        />\r\n      </AppStyled>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App\r\n\r\n\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './component/App/App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}